Index: app/src/main/java/com/example/mysubmission3/db/DatabaseHelper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/mysubmission3/db/DatabaseHelper.kt	(date 1609341475492)
+++ app/src/main/java/com/example/mysubmission3/db/DatabaseHelper.kt	(date 1609341475492)
@@ -12,7 +12,7 @@
         private val DATABASE_VERSION = 1
 
         private val SQL_CREATE_TABLE_NOTE = "CREATE TABLE $TABLE_NAME" +
-                "(${DatabaseContract.FavColumns._ID} INTEGER PRIMARY KEY AUTOINCREMENT," +
+                "(${DatabaseContract.FavColumns._ID} INTEGER PRIMARY KEY," +
                 "${DatabaseContract.FavColumns.USERNAME} TEXT NOT NULL," +
                 "${DatabaseContract.FavColumns.URL} TEXT NOT NULL," +
                 "${DatabaseContract.FavColumns.IMAGE} TEXT NOT NULL)"
Index: app/src/main/java/com/example/mysubmission3/db/FavoriteHelper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/mysubmission3/db/FavoriteHelper.kt	(date 1609341475444)
+++ app/src/main/java/com/example/mysubmission3/db/FavoriteHelper.kt	(date 1609341475444)
@@ -6,6 +6,7 @@
 import android.database.SQLException
 import android.database.sqlite.SQLiteDatabase
 import com.example.mysubmission3.db.DatabaseContract.FavColumns.Companion.TABLE_NAME
+import com.example.mysubmission3.db.DatabaseContract.FavColumns.Companion.USERNAME
 import com.example.mysubmission3.db.DatabaseContract.FavColumns.Companion._ID
 
 class FavoriteHelper(context: Context){
@@ -52,6 +53,17 @@
                 null,
                 null,
                 null)
+    }
+    fun queryByUsername(username: String): Cursor {
+        return database.query(
+                DATABASE_TABLE,
+                null,
+                "$USERNAME = ?",
+                arrayOf(username),
+                null,
+                null,
+                null,
+                null)
     }
     fun insert(values: ContentValues?): Long {
         return database.insert(DATABASE_TABLE, null, values)
Index: app/src/main/java/com/example/mysubmission3/adapter/ListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/mysubmission3/adapter/ListAdapter.kt	(date 1609340353158)
+++ app/src/main/java/com/example/mysubmission3/adapter/ListAdapter.kt	(date 1609340353158)
@@ -12,12 +12,6 @@
 
 class ListAdapter: RecyclerView.Adapter<ListAdapter.ListViewolde>() {
 
-    private var onitemClikCallBack: OnitemClikCallBack? = null
-
-    fun setOnItemClickCallBack(onitemClikCallBack: OnitemClikCallBack){
-        this.onitemClikCallBack = onitemClikCallBack
-    }
-
     var listData = ArrayList<ModelData>()
 
     fun setData(items: ArrayList<ModelData>) {
@@ -72,4 +66,10 @@
         notifyItemRangeRemoved(position, this.listData.size)
     }
 
+    private var onitemClikCallBack: OnitemClikCallBack? = null
+
+    fun setOnItemClickCallBack(onitemClikCallBack: OnitemClikCallBack){
+        this.onitemClikCallBack = onitemClikCallBack
+    }
+
 }
\ No newline at end of file
Index: app/src/main/java/com/example/mysubmission3/DetailActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/mysubmission3/DetailActivity.kt	(date 1609341475406)
+++ app/src/main/java/com/example/mysubmission3/DetailActivity.kt	(date 1609341475406)
@@ -61,9 +61,6 @@
         val url = intentUsers.url.toString()
         val image = intentUsers.image.toString()
         val id = intentUsers.id
-        Log.d("log api user: ", userName)
-        Log.d("log api url: ", url)
-        Log.d("log api image: ", image)
 
         val pagerAdapter = PagerAdapter(
                 userName,
@@ -76,6 +73,8 @@
         showLoading(true)
         showDetail(userName)
 
+        favAdapter= ListAdapter()
+
         favoriteHelper = FavoriteHelper.getInstance(applicationContext)
         favoriteHelper.open()
 
@@ -88,17 +87,24 @@
             if (statusFavorite) {
 
                 val values = ContentValues()
+                values.put(DatabaseContract.FavColumns._ID, id)
                 values.put(DatabaseContract.FavColumns.USERNAME, userName)
                 values.put(DatabaseContract.FavColumns.URL, url)
                 values.put(DatabaseContract.FavColumns.IMAGE, image)
-                Log.d("log api values: ", values.toString())
-
                 favoriteHelper.insert(values)
+
+                val user = ModelData()
+                user.userName = userName
+                favAdapter.addItem(user)
+
+
                 "Satu item berhasil ditambah".showSnackbarMessage()
+                statusFavorite = true
 
             } else {
                 favoriteHelper.deleteById(id.toString())
                 "Satu item berhasil dihapus".showSnackbarMessage()
+                statusFavorite = false
             }
             setStatusFavorite(statusFavorite)
         }
@@ -114,13 +120,14 @@
 
     private fun loadFavAsync(username: String) {
 
-        val cursor = favoriteHelper.queryById(username)
+        val cursor = favoriteHelper.queryByUsername(username)
         val listfav =  MappingHelper.mapCursorToArrayList(cursor)
 
         if (listfav.size > 0) {
             statusFavorite = true
         }
-
+        setStatusFavorite(statusFavorite)
+        Log.d("uname =", username)
     }
 
 
Index: app/src/main/java/com/example/mysubmission3/MyFavoriteUserActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/mysubmission3/MyFavoriteUserActivity.kt	(date 1609340353149)
+++ app/src/main/java/com/example/mysubmission3/MyFavoriteUserActivity.kt	(date 1609340353149)
@@ -1,64 +1,83 @@
 package com.example.mysubmission3
 
-import android.content.Intent
 import android.os.Bundle
 import android.util.Log
-import android.widget.Toast
 import androidx.appcompat.app.AppCompatActivity
+import androidx.recyclerview.widget.LinearLayoutManager
 import com.example.mysubmission3.adapter.ListAdapter
 import com.example.mysubmission3.databinding.ActivityMyFavoriteUserBinding
+import com.example.mysubmission3.db.FavoriteHelper
 import com.example.mysubmission3.entity.ModelData
+import com.example.mysubmission3.helper.MappingHelper
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.GlobalScope
+import kotlinx.coroutines.async
+import kotlinx.coroutines.launch
 
 class MyFavoriteUserActivity : AppCompatActivity() {
 
     private lateinit var binding: ActivityMyFavoriteUserBinding
     private lateinit var favAdapter: ListAdapter
+    private lateinit var favHelper: FavoriteHelper
+
+    companion object{
+        private const val EXTRA_STATE = "extra_state"
+        private const val PARCELABLE = "parcelable"
+    }
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         binding = ActivityMyFavoriteUserBinding.inflate(layoutInflater)
         setContentView(binding.root)
-    }
 
-    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
-        super.onActivityResult(requestCode, resultCode, data)
-        if (data != null) {
-            when (requestCode) {
-                DetailActivity.REQUEST_ADD -> if (resultCode == DetailActivity.RESULT_ADD) {
-                    val user =
-                        data.getParcelableExtra<ModelData>(DetailActivity.INTENT_PARCELABLE)!!
-                    Log.d("data note= ", user.toString())
+        binding.rvFavorite.layoutManager = LinearLayoutManager(this)
+        binding.rvFavorite.setHasFixedSize(true)
+        favAdapter = ListAdapter()
+        binding.rvFavorite.adapter = favAdapter
 
-                    favAdapter.addItem(user)
-                    binding.rvFavorite.smoothScrollToPosition(favAdapter.itemCount - 1)
+        favHelper = FavoriteHelper.getInstance(applicationContext)
+        favHelper.open()
 
-                    Toast.makeText(this@MyFavoriteUserActivity, "Satu tem berhasil dtambahkan", Toast.LENGTH_SHORT).show()
-                }
-                DetailActivity.REQUEST_UPDATE ->
-                    when (resultCode) {
-                        DetailActivity.RESULT_UPDATE -> {
-                            val note =
-                                data.getParcelableExtra<ModelData>(DetailActivity.INTENT_PARCELABLE) !!
-                            val position =
-                                data.getIntExtra(DetailActivity.EXTRA_POSITION, 0)
-
-                            favAdapter.updateItem(position, note)
-                            binding.rvFavorite.smoothScrollToPosition(position)
+        loadFavAsync()
+        if (savedInstanceState == null) {
+            loadFavAsync()
+        }else{
+            val list = savedInstanceState.getParcelableArrayList<ModelData>(EXTRA_STATE)
+            if (list != null){
+                favAdapter.listData = list
+            }
+        }
+    }
 
-                            Toast.makeText(this@MyFavoriteUserActivity, "Satu item berhasil diubah", Toast.LENGTH_SHORT).show()
+    private fun loadFavAsync() {
+//        val user = favHelper.queryAll()
+//        MappingHelper.mapCursorToArrayList(user)
+//        Log.d("val user = ", user.toString())
 
-                        }
-                        DetailActivity.RESULT_DELETE -> {
-                            val position =
-                                data.getIntExtra(DetailActivity.EXTRA_POSITION, 0)
-                            favAdapter.removeItem(position)
-                            Toast.makeText(this@MyFavoriteUserActivity, "Satu item berhasil dihapus", Toast.LENGTH_SHORT).show()
+        GlobalScope.launch(Dispatchers.Main) {
+            val deferredNotes = async(Dispatchers.IO) {
+                val cursor = favHelper.queryAll()
+                MappingHelper.mapCursorToArrayList(cursor)
+            }
+            val user = deferredNotes.await()
+            Log.d("data user = ", user.toString())
+            if (user.size > 0) {
+                favAdapter.setData(user)
 
-                        }
-                    }
-            }
-        }
+            } else {
+                favAdapter.listData = ArrayList()
+            }
+        }
+    }
+
+    override fun onSaveInstanceState(outState: Bundle) {
+        super.onSaveInstanceState(outState)
+        outState.putParcelableArrayList(EXTRA_STATE, favAdapter.listData)
+    }
+
+    override fun onDestroy() {
+        super.onDestroy()
+        favHelper.close()
     }
 
-
 }
\ No newline at end of file
